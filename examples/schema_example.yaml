actor_schema: "0.1.0"

info:
  description: "Schema for my device"
  version: "1.0.0"

tanent_id: 001

product_id: 001

protocol: lwm2m

topics:
  /19/0/0:
    description: "event reports from devices"
    schema:
      oneOf:
        - $ref: "#/components/schemas/Events"
        - $ref: "#/components/schemas/Responses"

  /19/1/0:
    schema:
      $ref: "#/components/schemas/Requests"

components:
  schemas:
    DataType:
      description: "the data_type header"
      type: "object"
      properties:
        required:
          - data_type
        data_type:
          type: "string"
          enum: ["events","requests","responses"]

    Events:
      allOf:
        - $ref: "#/components/schemas/DataType"
        - description: "the data structure of events"
          type: "object"
          properties:
            required:
              - data
            data:
              type: array
              items:
                oneOf:
                  - $ref: "#/components/schemas/TagedTemperature"
                  - $ref: "#/components/schemas/TagedHumidity"

    Responses:
      allOf:
        - $ref: "#/components/schemas/DataType"
        - description: "base data structure of results"
          type: "object"
          properties:
            data:
              type: "object"
              properties:
                request_id:
                  type: "integer"
                result:
                  allOf:
                    - type: object
                      properties:
                        code:
                          $ref: "#/components/schemas/ResultCode"
                        msg:
                          type: "string"
                    - $ref: "#/components/schemas/ResultValue"

    Requests:
      allOf:
        - $ref: "#/components/schemas/DataType"
        - description: "the base request structure"
          type: "object"
          properties:
            data:
              type: "object"
              properties:
                required:
                  - request_type
                  - request_id
                  - parameters
                request_type:
                  type: "string"
                  enum: ["get_device_status","get_temperature","get_humidity"]
                request_id:
                  description: "request id used to match the response to the request"
                  type: "integer"
                parameters:
                  type: array
                  items: {} # parameter array can be arbitrary type

    ResultValue:
      oneOf:
        - $ref: "#/components/schemas/Status"
        - $ref: "#/components/schemas/TagedTemperature"
        - $ref: "#/components/schemas/TagedHumidity"

    TagedTemperature:
      description: "the temperature of the local sensor"
      type: "object"
      properties:
        temperature:
          $ref: "#/components/schemas/Temperature"

    TagedHumidity:
      description: "the humidity of the local sensor"
      type: "object"
      properties:
        humidity:
          $ref: "#/components/schemas/Humidity"

    Temperature:
      type: "object"
      properties:
        required:
          - time
          - value
        time:
          type: "string"
          format: "datatime"
        value:
          type: "integer"
          range:
            min: -23
            max: 79
          unit: "ËšC"
          unitName: "Celsius Degree"

    Humidity:
      type: "object"
      properties:
        required:
          - time
          - value
        time:
          type: "string"
          format: "datatime"
        value:
          type: "integer"
          range:
            min: 0
            max: 100
          unit: "%rh"
          unitName: "Relative Humidity"

    Status:
      type: "object"
      properties:
        is_working:
          type: "bool"

    ResultCode:
      type: "integer"
      description: "result string"
      enum:
        - 0 # "ok"
        - 1 # "error"
        - 2 # "pending"